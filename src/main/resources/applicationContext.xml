<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mvc="http://www.springframework.org/schema/mvc"  xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
            http://www.springframework.org/schema/jdbc
            http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.2.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
            http://www.springframework.org/schema/task
            http://www.springframework.org/schema/task/spring-task-3.2.xsd">

	<!-- 扫描如下包 -->
	<context:component-scan base-package="com.thend.friendship.dao"/>
	<context:component-scan base-package="com.thend.friendship.mongo.dao"/>
	<context:component-scan base-package="com.thend.friendship.cache"/>
	<context:component-scan base-package="com.thend.friendship.service"/>
	<context:component-scan base-package="com.thend.friendship.controller"/>
	
	<!-- 配置文件 -->
	<context:property-placeholder location="classpath:common.properties,classpath:jdbc.properties" ignore-unresolvable="true"/>
	
	<!-- 主数据库 -->
    <bean id="masterDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"          
        destroy-method="close">
        <property name="driverClass">
            <value>${jdbc.driver}</value>
        </property>
        <property name="jdbcUrl">
            <value>${jdbc.master.url}</value>
        </property>
        <property name="user">
            <value>${jdbc.master.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.master.password}</value>
        </property>
        <property name="maxIdleTime">
            <value>${jdbc.maxIdleTime}</value>
        </property>
        <property name="testConnectionOnCheckin">
            <value>${jdbc.testConnectionOnCheckin}</value>
        </property>
        <property name="automaticTestTable">
            <value>${jdbc.automaticTestTable}</value>
        </property>
        <property name="idleConnectionTestPeriod">
            <value>${jdbc.idleConnectionTestPeriod}</value>
        </property>
        <property name="minPoolSize">
            <value>${jdbc.minPoolSize}</value>
        </property>
        <property name="maxPoolSize">
            <value>${jdbc.maxPoolSize}</value>
        </property>
    </bean>
    
    <bean id="masterSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="masterDataSource" />
		<property name="mapperLocations" value="classpath*:ibatis/**/*.xml" />
	</bean>
	
    <bean id="masterSqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="masterSqlSessionFactory" />
	</bean>
	
	<!-- 从数据库  -->
    <bean id="slaveDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"          
        destroy-method="close">
        <property name="driverClass">
            <value>${jdbc.driver}</value>
        </property>
        <property name="jdbcUrl">
            <value>${jdbc.slave.url}</value>
        </property>
        <property name="user">
            <value>${jdbc.slave.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.slave.password}</value>
        </property>
        <property name="maxIdleTime">
            <value>${jdbc.maxIdleTime}</value>
        </property>
        <property name="testConnectionOnCheckin">
            <value>${jdbc.testConnectionOnCheckin}</value>
        </property>
        <property name="automaticTestTable">
            <value>${jdbc.automaticTestTable}</value>
        </property>
        <property name="idleConnectionTestPeriod">
            <value>${jdbc.idleConnectionTestPeriod}</value>
        </property>
        <property name="minPoolSize">
            <value>${jdbc.minPoolSize}</value>
        </property>
        <property name="maxPoolSize">
            <value>${jdbc.maxPoolSize}</value>
        </property>
    </bean>
    
    <bean id="slaveSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="slaveDataSource" />
		<property name="mapperLocations" value="classpath*:ibatis/**/*.xml" />
	</bean>
	
    <bean id="slaveSqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="slaveSqlSessionFactory" />
	</bean>

	<!-- 注解事务-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<constructor-arg ref="masterDataSource"/>
    </bean>
  	<tx:annotation-driven transaction-manager="txManager" />
  	
	<!-- 注解定时任务 -->
    <task:annotation-driven/> 
    
	<!-- 默认的注解映射的支持 -->
	<mvc:annotation-driven />
	
	<!-- redis -->
	<bean id="soloJedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- jedis实例数-->   
    	<property name="maxTotal"  value="${redis.soloMaxTotal}" />  
    	<property name="maxIdle" value="${redis.soloMaxIdle}" />
    	<!-- 最大等待时间 -->  
    	<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
    	<property name="testOnBorrow" value="${redis.testOnBorrow}"/>       
	</bean>
	
	<bean id="shardedJedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- jedis实例数-->   
    	<property name="maxTotal"  value="${redis.shardedMaxTotal}" />  
    	<property name="maxIdle" value="${redis.shardedMaxIdle}" />
    	<!-- 最大等待时间 -->  
    	<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
    	<property name="testOnBorrow" value="${redis.testOnBorrow}"/>
	</bean>
	
	<bean id="soloJedisPool" class="redis.clients.jedis.JedisPool">
    	<constructor-arg index="0" ref="soloJedisPoolConfig"/>
		<constructor-arg index="1" value="${redis.host}"/>
		<constructor-arg index="2" value="${redis.port}"/>
	</bean>
	
	<bean id="shardedJedisPool" class="com.thend.friendship.redis.SimpleShardedJedisPool">
		<constructor-arg index="0" ref="shardedJedisPoolConfig"/>
		<constructor-arg index="1" value="${redis.clusters}"/>
		<constructor-arg index="2" value="#([0-9]+)#"/>
	</bean>
	
	<bean id="redisClient" class="com.thend.friendship.redis.RedisClient">
		<property name="soloJedisPool" ref="soloJedisPool"/>
		<property name="shardedJedisPool" ref="shardedJedisPool"/>
	</bean>
	
	<!-- solr -->
	<bean id="solrPingClient" class="com.thend.friendship.solr.client.SolrPingClient">
		<constructor-arg value="${solr.ping.url}"/>
	</bean>
	
	<bean id="solrSearchClient" class="com.thend.friendship.solr.client.SolrSearchClient">
		<constructor-arg value="${solr.search.url}"/>
	</bean>
	
	<!-- mongo -->
	<bean id="mongodb" factory-bean="mongoDBFactory" factory-method="createDB">
		<constructor-arg value="${mongo.mongoUrl}" />
	</bean>
	<bean id="mongoDBFactory" class="com.thend.friendship.mongo.MongoDBFactory" />
	
	<!-- rabbitmq -->
	<bean id="rabbitMQSender" class="com.thend.friendship.mq.RabbitMQSender">
		<constructor-arg value="${rabbit.uri}"/>
		<constructor-arg value="${rabbit.exchange}"/>
		<constructor-arg value="${rabbit.routingKey}"/>
		<constructor-arg value="${rabbit.cluster}"/>
	</bean>
	<bean id="rabbitMQListener" class="com.thend.friendship.mq.RabbitMQListener">
		<constructor-arg value="${rabbit.uri}"/>
		<constructor-arg value="${rabbit.exchange}"/>
		<constructor-arg value="${rabbit.routingKey}"/>
		<constructor-arg value="${rabbit.cluster}"/>
	</bean>
	
	<bean id="autoProxyCreator"  class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" p:exposeProxy="true" p:order="0" p:proxyTargetClass="true"></bean>
	<!-- 配置化缓存 -->
	<bean id="generalRedisCacheAdvice" class="com.thend.friendship.cache.GeneralRedisCacheAdvice" />
	<bean class="com.thend.friendship.cache.GeneralRedisCacheAdvisor">
		<property name="advice" ref="generalRedisCacheAdvice" />
		<property name="filteredClass">
			<list>
				<value>com.thend.friendship.service.impl.UserServiceImpl</value>
			</list>
		</property>
	</bean>
</beans>